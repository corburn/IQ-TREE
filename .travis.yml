language: cpp

# https://jonasw.de/blog/2015/07/22/develop/cplusplus14-on-travis-with-cmake/
#addons:
#  apt:
#    sources:
#      - llvm-toolchain-precise
#      - ubuntu-toolchain-r-test
#    packages:
#      - clang-3.7
#      - g++-5
#      - gcc-5

addons:
  apt:
    sources:
      # https://launchpad.net/~george-edison55/+archive/ubuntu/precise-backports
      # cmake 3.2.3-5ppa5~precise1
      # The following packages have unmet dependencies:
      # cmake : Depends: cmake-data (= 3.2.3-5ppa5~precise1) but 2.8.7-0ubuntu5 is to be installed
      # E: Unable to correct problems, you have held broken packages.
      #- george-edison55-precise-backports
      # https://launchpad.net/~kalakris/+archive/ubuntu/cmake
      # cmake 2.8.11.2-1ubuntu2~precise1
      - kalakris-cmake
      - ubuntu-toolchain-r-test
    packages:
      # CMake 2.8.10 or higher is required.  You are running version 2.8.7
      - cmake
      - g++-6
      - gcc-6
      - openmpi
      # Could NOT find Eigen3 (missing:  EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version "2.91.0")
      - libeigen3-dev

#compiler:
#  - clang
#  - gcc

env:
#  - OMP_NUM_THREADS=4
#    IQTREE_FLAGS="omp"
#  - OMP_NUM_THREADS=4
#    IQTREE_FLAGS="mpi"
  - OMP_NUM_THREADS=4
    IQTREE_FLAGS="omp mpi"
    CXX=g++-6
    CC=gcc-6

# disable the default submodule logic
# https://gist.github.com/petrbel/c3bf7e0f59c22a52f534
git:
  submodules: false

# use sed to replace the SSH URL with the public URL, then init and update submodules
before_install:
  - sed -i 's|git@git.assembla.com:|git://git.assembla.com/|' .gitmodules
  - git submodule update --init --recursive
  - mkdir build && cd build
  - env
  - which gcc-6
  - ls -l /usr/bin

install:
  - cmake -DIQTREE_FLAGS="$IQTREE_FLAGS" -DCMAKE_INSTALL_PREFIX:PATH=$HOME/.local ..
  - make -j$(nproc)
  - make install

script: true

# The Build Lifecycle: https://docs.travis-ci.com/user/customizing-the-build
#
# A build on Travis CI is made up of two steps:
#
# install: install any dependencies required
# script: run the build script
#
# You can run custom commands before the installation step (before_install), and
# before (before_script) or after (after_script) the script step.
#
# In a before_install step, you can install additional dependencies required by
# your project such as Ubuntu packages or custom services.
#
# You can perform additional steps when your build succeeds or fails using the
# after_success (such as building documentation, or deploying to a custom server)
# or after_failure (such as uploading log files) options. In both after_failure
# and after_success, you can access the build result using the $TRAVIS_TEST_RESULT
# environment variable.
#
# The complete build lifecycle, including three optional deployment steps and
# after checking out the git repository and changing to the repository directory,
# is:
#
# Install apt addons
# before_install
# install
# before_script
# script
# after_success or after_failure
# OPTIONAL before_deploy
# OPTIONAL deploy
# OPTIONAL after_deploy
# after_script


# Hints: https://docs.travis-ci.com/user/languages/c/
#
# OpenMP projects
# ---------------
#
# OpenMP projects should set the environment variable OMP_NUM_THREADS to a
# reasonably small value (say, 4). OpenMP detects the cores on the hosting
# hardware, rather than the VM on which your tests run.
#
# MPI projects
# ------------
#
# The default environment variable $CC is known to interfere with MPI projects.
# In this case, we recommend unsetting it:
#
# before_install:
#   - test -n $CC && unset CC
